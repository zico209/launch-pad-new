/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FarmingC2N,
  FarmingC2NInterface,
} from "../../contracts/FarmingC2N";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "deposited",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paidOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pending",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accERC20PerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDeposits",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPending",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fdb38038062001fdb83398181016040528101906200003791906200029b565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000308565b60405180910390fd5b620000be816200011e60201b60201c565b5082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600381905550806008819055508060098190555050505062000325565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021482620001e7565b9050919050565b6000620002288262000207565b9050919050565b6200023a816200021b565b81146200024657600080fd5b50565b6000815190506200025a816200022f565b92915050565b6000819050919050565b620002758162000260565b81146200028157600080fd5b50565b60008151905062000295816200026a565b92915050565b600080600060608486031215620002b757620002b6620001e2565b5b6000620002c78682870162000249565b9350506020620002da8682870162000284565b9250506040620002ed8682870162000284565b9150509250925092565b620003028162000207565b82525050565b60006020820190506200031f6000830184620002f7565b92915050565b611ca680620003356000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063a85adeab1161007c578063a85adeab14610382578063ca1d209d146103a0578063e2bbb158146103bc578063e4c75c27146103d8578063e6fd48bc14610408578063f2fde38b1461042657610158565b8063715018a6146102bd578063785e9e86146102c75780638da5cb5b146102e55780638f10369a1461030357806393f1a40b14610321578063a23831061461035257610158565b8063441a3e7011610115578063441a3e701461022557806351eb05a6146102415780635312ea8e1461025d5780635c76ca2d14610279578063630b5ba11461029757806364482f79146102a157610158565b8063081e3eda1461015d5780630e15561a1461017b5780631526fe271461019957806317caf6f1146101cd5780631eaaa045146101eb5780633f90916a14610207575b600080fd5b610165610442565b6040516101729190611529565b60405180910390f35b61018361044f565b6040516101909190611529565b60405180910390f35b6101b360048036038101906101ae9190611575565b610455565b6040516101c4959493929190611621565b60405180910390f35b6101d56104bb565b6040516101e29190611529565b60405180910390f35b610205600480360381019061020091906116fc565b6104c1565b005b61020f6105e9565b60405161021c9190611529565b60405180910390f35b61023f600480360381019061023a919061174f565b610643565b005b61025b60048036038101906102569190611575565b610863565b005b61027760048036038101906102729190611575565b610965565b005b610281610aba565b60405161028e9190611529565b60405180910390f35b61029f610ac0565b005b6102bb60048036038101906102b6919061178f565b610af3565b005b6102c5610b7d565b005b6102cf610b91565b6040516102dc91906117e2565b60405180910390f35b6102ed610bb7565b6040516102fa919061180c565b60405180910390f35b61030b610be0565b6040516103189190611529565b60405180910390f35b61033b60048036038101906103369190611853565b610be6565b604051610349929190611893565b60405180910390f35b61036c60048036038101906103679190611853565b610c17565b6040516103799190611529565b60405180910390f35b61038a610c7a565b6040516103979190611529565b60405180910390f35b6103ba60048036038101906103b59190611575565b610c80565b005b6103d660048036038101906103d1919061174f565b610d50565b005b6103f260048036038101906103ed9190611853565b610f39565b6040516103ff9190611529565b60405180910390f35b6104106110d0565b60405161041d9190611529565b60405180910390f35b610440600480360381019061043b91906118bc565b6110d6565b005b6000600580549050905090565b60045481565b6005818154811061046557600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154905085565b60075481565b6104c961115c565b80156104d8576104d7610ac0565b5b600060085442116104eb576008546104ed565b425b905083600760008282546105019190611918565b9250508190555060056040518060a001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001868152602001838152602001600081526020016000815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040155505050505050565b600060085442116105fd5760009050610640565b6000600954421061061057600954610612565b425b905060025460085482610625919061194c565b6003546106329190611980565b61063c919061194c565b9150505b90565b600060058381548110610659576106586119c2565b5b9060005260206000209060050201905060006006600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001541015610704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fb90611a74565b60405180910390fd5b61070d84610863565b600081600101546ec097ce7bc90715b34b9f1000000000846003015484600001546107389190611980565b6107429190611ac3565b61074c919061194c565b905061075833826111e3565b838260000154610768919061194c565b82600001819055506ec097ce7bc90715b34b9f1000000000836003015483600001546107949190611980565b61079e9190611ac3565b82600101819055506107f533858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112a19092919063ffffffff16565b838360040154610805919061194c565b8360040181905550843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516108549190611529565b60405180910390a35050505050565b600060058281548110610879576108786119c2565b5b906000526020600020906005020190506000600954421061089c5760095461089e565b425b9050816002015481116108b2575050610962565b600082600401549050600081036108d457818360020181905550505050610962565b60008360020154836108e6919061194c565b905060006007548560010154600354846109009190611980565b61090a9190611980565b6109149190611ac3565b9050826ec097ce7bc90715b34b9f1000000000826109329190611980565b61093c9190611ac3565b856003015461094b9190611918565b856003018190555042856002018190555050505050505b50565b60006005828154811061097b5761097a6119c2565b5b9060005260206000209060050201905060006006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050610a323382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112a19092919063ffffffff16565b80600001548260040154610a46919061194c565b8260040181905550823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051610a999190611529565b60405180910390a36000816000018190555060008160010181905550505050565b60025481565b6000600580549050905060005b81811015610aef57610ade81610863565b80610ae890611af4565b9050610acd565b5050565b610afb61115c565b8015610b0a57610b09610ac0565b5b8160058481548110610b1f57610b1e6119c2565b5b906000526020600020906005020160010154600754610b3e919061194c565b610b489190611918565b6007819055508160058481548110610b6357610b626119c2565b5b906000526020600020906005020160010181905550505050565b610b8561115c565b610b8f6000611320565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6006602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b6000806006600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000015491505092915050565b60095481565b6009544210610cc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbb90611bae565b60405180910390fd5b610d13333083600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113e4909392919063ffffffff16565b60035481610d219190611ac3565b60096000828254610d329190611918565b9250508190555080600454610d479190611918565b60048190555050565b600060058381548110610d6657610d656119c2565b5b9060005260206000209060050201905060006006600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050610dd384610863565b600081600001541115610e2d57600081600101546ec097ce7bc90715b34b9f100000000084600301548460000154610e0b9190611980565b610e159190611ac3565b610e1f919061194c565b9050610e2b33826111e3565b505b610e7e3330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113e4909392919063ffffffff16565b828260040154610e8e9190611918565b8260040181905550828160000154610ea69190611918565b81600001819055506ec097ce7bc90715b34b9f100000000082600301548260000154610ed29190611980565b610edc9190611ac3565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051610f2b9190611529565b60405180910390a350505050565b60008060058481548110610f5057610f4f6119c2565b5b9060005260206000209060050201905060006006600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600082600301549050600083600401549050836002015442118015610fda575060008114155b1561108b5760006009544210610ff257600954610ff4565b425b9050600060095486600201541061100d57600954611013565b85600201545b905060008183611023919061194c565b9050600060075488600101546003548461103d9190611980565b6110479190611980565b6110519190611980565b9050846ec097ce7bc90715b34b9f10000000008261106f9190611980565b6110799190611ac3565b866110849190611918565b9550505050505b82600101546ec097ce7bc90715b34b9f10000000008385600001546110b09190611980565b6110ba9190611ac3565b6110c4919061194c565b94505050505092915050565b60085481565b6110de61115c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111505760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611147919061180c565b60405180910390fd5b61115981611320565b50565b611164611466565b73ffffffffffffffffffffffffffffffffffffffff16611182610bb7565b73ffffffffffffffffffffffffffffffffffffffff16146111e1576111a5611466565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111d8919061180c565b60405180910390fd5b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401611240929190611bce565b6020604051808303816000875af115801561125f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112839190611c0c565b5080600260008282546112969190611918565b925050819055505050565b61131b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016112d4929190611bce565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061146e565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611460848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161141993929190611c39565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061146e565b50505050565b600033905090565b600080602060008451602086016000885af180611491576040513d6000823e3d81fd5b3d9250600051915050600082146114ac5760018114156114c8565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b1561150a57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611501919061180c565b60405180910390fd5b50505050565b6000819050919050565b61152381611510565b82525050565b600060208201905061153e600083018461151a565b92915050565b600080fd5b61155281611510565b811461155d57600080fd5b50565b60008135905061156f81611549565b92915050565b60006020828403121561158b5761158a611544565b5b600061159984828501611560565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115e76115e26115dd846115a2565b6115c2565b6115a2565b9050919050565b60006115f9826115cc565b9050919050565b600061160b826115ee565b9050919050565b61161b81611600565b82525050565b600060a0820190506116366000830188611612565b611643602083018761151a565b611650604083018661151a565b61165d606083018561151a565b61166a608083018461151a565b9695505050505050565b600061167f826115a2565b9050919050565b600061169182611674565b9050919050565b6116a181611686565b81146116ac57600080fd5b50565b6000813590506116be81611698565b92915050565b60008115159050919050565b6116d9816116c4565b81146116e457600080fd5b50565b6000813590506116f6816116d0565b92915050565b60008060006060848603121561171557611714611544565b5b600061172386828701611560565b9350506020611734868287016116af565b9250506040611745868287016116e7565b9150509250925092565b6000806040838503121561176657611765611544565b5b600061177485828601611560565b925050602061178585828601611560565b9150509250929050565b6000806000606084860312156117a8576117a7611544565b5b60006117b686828701611560565b93505060206117c786828701611560565b92505060406117d8868287016116e7565b9150509250925092565b60006020820190506117f76000830184611612565b92915050565b61180681611674565b82525050565b600060208201905061182160008301846117fd565b92915050565b61183081611674565b811461183b57600080fd5b50565b60008135905061184d81611827565b92915050565b6000806040838503121561186a57611869611544565b5b600061187885828601611560565b92505060206118898582860161183e565b9150509250929050565b60006040820190506118a8600083018561151a565b6118b5602083018461151a565b9392505050565b6000602082840312156118d2576118d1611544565b5b60006118e08482850161183e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061192382611510565b915061192e83611510565b9250828201905080821115611946576119456118e9565b5b92915050565b600061195782611510565b915061196283611510565b925082820390508181111561197a576119796118e9565b5b92915050565b600061198b82611510565b915061199683611510565b92508282026119a481611510565b915082820484148315176119bb576119ba6118e9565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f77697468647261773a2063616e2774207769746864726177206d6f726520746860008201527f616e206465706f73697400000000000000000000000000000000000000000000602082015250565b6000611a5e602a836119f1565b9150611a6982611a02565b604082019050919050565b60006020820190508181036000830152611a8d81611a51565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ace82611510565b9150611ad983611510565b925082611ae957611ae8611a94565b5b828204905092915050565b6000611aff82611510565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b3157611b306118e9565b5b600182019050919050565b7f66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f7360008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b986022836119f1565b9150611ba382611b3c565b604082019050919050565b60006020820190508181036000830152611bc781611b8b565b9050919050565b6000604082019050611be360008301856117fd565b611bf0602083018461151a565b9392505050565b600081519050611c06816116d0565b92915050565b600060208284031215611c2257611c21611544565b5b6000611c3084828501611bf7565b91505092915050565b6000606082019050611c4e60008301866117fd565b611c5b60208301856117fd565b611c68604083018461151a565b94935050505056fea2646970667358221220628028e7b2bd325d1e6b8cd6b74540a704462c3c685dadce5da95864f5a56a3264736f6c63430008140033";

type FarmingC2NConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FarmingC2NConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FarmingC2N__factory extends ContractFactory {
  constructor(...args: FarmingC2NConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _erc20: AddressLike,
    _rewardPerSecond: BigNumberish,
    _startTimestamp: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _erc20,
      _rewardPerSecond,
      _startTimestamp,
      overrides || {}
    );
  }
  override deploy(
    _erc20: AddressLike,
    _rewardPerSecond: BigNumberish,
    _startTimestamp: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _erc20,
      _rewardPerSecond,
      _startTimestamp,
      overrides || {}
    ) as Promise<
      FarmingC2N & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FarmingC2N__factory {
    return super.connect(runner) as FarmingC2N__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FarmingC2NInterface {
    return new Interface(_abi) as FarmingC2NInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FarmingC2N {
    return new Contract(address, _abi, runner) as unknown as FarmingC2N;
  }
}
